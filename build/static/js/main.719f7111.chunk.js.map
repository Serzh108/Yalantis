{"version":3,"sources":["components/Employees/Employees.module.css","components/EmployeesBd/EmployeesBd.module.css","pages/EmployeesPage/EmployeesPage.module.css","components/Employees/Employees.js","redux/employeesReduser.js","redux/store.js","redux/employeesOperations.js","components/EmployeesBd/EmployeesBd.js","pages/EmployeesPage/EmployeesPage.js","App.tsx","index.tsx"],"names":["module","exports","employeesSlice","createSlice","name","initialState","items","selectedId","isLoading","reducers","getEmployees","state","payload","res","setChecked","map","item","id","checked","includesId","filter","setIsLoading","resetIsLoading","persistConfig","key","storage","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","rootReducer","combineReducers","reducer","persistedReducer","persistReducer","store","configureStore","persistor","persistStore","ABC","i","charCodeAt","push","String","fromCharCode","Employees","dispatch","useDispatch","handleChange","e","target","getState","a","employees","includes","actions","className","styles","seriesList","title","seriesList_inner","charItem","sortedByChar","lastName","charBlock","length","label","firstName","type","checkbox","onChange","MONTH_LIST","EmployeesBd","sortedByChecked","formatDate","Date","toLocaleString","year","month","day","listDob","noSelected","monthItem","idx","sortedByDob","dob","slice","override","css","EmployeesPage","useSelector","useEffect","axios","get","employeesArray","result","data","console","log","container","style","position","top","left","zIndex","size","color","loading","App","path","exact","component","to","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.719f7111.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"seriesList\":\"Employees_seriesList__2g-UT\",\"title\":\"Employees_title__Y1OxU\",\"seriesList_inner\":\"Employees_seriesList_inner__2PENn\",\"charBlock\":\"Employees_charBlock__2Ttq9\",\"charItem\":\"Employees_charItem__34Lkn\",\"label\":\"Employees_label__1gKDs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"EmployeesBd_title__25eCt\",\"listDob\":\"EmployeesBd_listDob__3fwkZ\",\"noSelected\":\"EmployeesBd_noSelected__NJt47\",\"charItem\":\"EmployeesBd_charItem__3cWMw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"EmployeesPage_container__3XfT8\"};","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setChecked } from '../../redux/employeesOperations';\nimport styles from './Employees.module.css';\n\nconst ABC = [];\nfor (let i = 'AZ'.charCodeAt(0); i <= 'AZ'.charCodeAt(1); i++) {\n  ABC.push(String.fromCharCode(i));\n}\n\nexport default function Employees({ items }) {\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    dispatch(setChecked(e.target.id));\n  };\n\n  return (\n    <div className={styles.seriesList}>\n      <p className={styles.title}>Employees</p>\n      <div className={styles.seriesList_inner}>\n        {ABC.map(charItem => {\n          const sortedByChar =\n            items && items.filter(item => item.lastName[0] === charItem);\n          return (\n            <div key={charItem} className={styles.charBlock}>\n              <p className={styles.charItem}>{charItem}</p>\n              {sortedByChar.length > 0 ? (\n                sortedByChar.map(item => (\n                  <label key={item.id} className={styles.label}>\n                    <span>\n                      {item.lastName} {item.firstName}\n                    </span>\n                    <input\n                      id={item.id}\n                      type=\"checkbox\"\n                      className={styles.checkbox}\n                      checked={item.checked}\n                      onChange={handleChange}\n                    />\n                  </label>\n                ))\n              ) : (\n                <p>---</p>\n              )}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst state = {\n  items: [],\n  selectedId: [],\n  isLoading: false,\n};\n\nexport const employeesSlice = createSlice({\n  name: 'employees',\n  initialState: state,\n  reducers: {\n    getEmployees: (state, { payload }) => ({\n      ...state,\n      items: [...payload.res],\n    }),\n    setChecked: (state, { payload }) => ({\n      ...state,\n      items: state.items.map(item =>\n        item.id !== payload.id ? item : { ...item, checked: !item.checked },\n      ),\n      selectedId: !payload.includesId\n        ? [...state.selectedId, payload.id]\n        : state.selectedId.filter(item => item !== payload.id),\n    }),\n    setIsLoading: state => ({\n      ...state,\n      isLoading: true,\n    }),\n    resetIsLoading: state => ({\n      ...state,\n      isLoading: false,\n    }),\n  },\n});\n","import {\n  configureStore,\n  combineReducers,\n  getDefaultMiddleware,\n} from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nimport { employeesSlice } from './employeesReduser';\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n};\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst rootReducer = combineReducers({\n  [employeesSlice.name]: employeesSlice.reducer,\n});\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware,\n});\n\nexport const persistor = persistStore(store);\n","import axios from 'axios';\nimport { employeesSlice } from './employeesReduser';\n\nconst url = 'https://yalantis-react-school-api.yalantis.com/api/task0/users';\n\nconst getEmployees = () => async (dispatch, getState) => {\n  dispatch(employeesSlice.actions.setIsLoading());\n  try {\n    const employeesArray = await axios.get(url);\n    const result = [...employeesArray.data];\n    const { selectedId } = getState().employees;\n    const res = result.map(item =>\n      selectedId.includes(item.id)\n        ? { ...item, checked: true }\n        : { ...item, checked: false },\n    );\n    dispatch(employeesSlice.actions.getEmployees({ res }));\n  } catch (err) {\n    console.log('getEmployees error', err);\n  }\n  dispatch(employeesSlice.actions.resetIsLoading());\n};\n\nconst setChecked = id => async (dispatch, getState) => {\n  const { selectedId } = getState().employees;\n  const includesId = selectedId.includes(id);\n  dispatch(employeesSlice.actions.setChecked({ id, includesId }));\n};\n\nexport { getEmployees, setChecked };\n","import React from 'react';\nimport styles from './EmployeesBd.module.css';\n\nconst MONTH_LIST = [\n  'January',\n  'Fubruary',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\n\nexport default function EmployeesBd({ items }) {\n  const sortedByChecked = items && items.filter(item => item.checked);\n\n  const formatDate = item => {\n    const dateFormated = new Date(item);\n    var options = { year: 'numeric', month: 'long', day: 'numeric' };\n    return dateFormated.toLocaleString('en-GB', options);\n  };\n\n  return (\n    <div className={styles.listDob}>\n      <p className={styles.title}>Employees birthday</p>\n\n      {sortedByChecked.length > 0 ? null : (\n        <p className={styles.noSelected}>No selected employees</p>\n      )}\n\n      {MONTH_LIST.map((monthItem, idx) => {\n        const sortedByDob = sortedByChecked.filter(\n          item => +item.dob.slice(5, 7) === idx + 1,\n        );\n\n        return (\n          <div key={idx}>\n            {sortedByDob.length > 0 ? (\n              <p key={monthItem} className={styles.charItem}>\n                {monthItem}\n              </p>\n            ) : null}\n            {sortedByDob.length > 0 &&\n              sortedByDob.map(item => (\n                <p key={item.id}>\n                  {item.lastName} {item.firstName} - {formatDate(item.dob)}\n                </p>\n              ))}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport CircleLoader from 'react-spinners/CircleLoader';\nimport { css } from '@emotion/core';\nimport { getEmployees } from '../../redux/employeesOperations';\nimport Employees from '../../components/Employees/Employees';\nimport EmployeesBd from '../../components/EmployeesBd/EmployeesBd';\nimport styles from './EmployeesPage.module.css';\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n`;\n\nexport default function EmployeesPage() {\n  const isLoading = useSelector(state => state.employees.isLoading);\n  const items = useSelector(state => state.employees.items);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getEmployees());\n  }, [dispatch]);\n\n  return (\n    <div className={styles.container}>\n      {isLoading && (\n        <div\n          style={{\n            position: 'absolute',\n            top: '20%',\n            left: '20%',\n            zIndex: '990',\n          }}\n        >\n          <CircleLoader\n            size={320}\n            color={'#00ff6c'}\n            css={override}\n            loading={isLoading}\n          />\n        </div>\n      )}\n\n      <Employees items={items} />\n      <EmployeesBd items={items} />\n    </div>\n  );\n}\n","import React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport EmployeesPage from './pages/EmployeesPage/EmployeesPage';\nimport './styles/App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n      <Route path=\"/\" exact component={EmployeesPage} />\n        <Redirect to=\"/\" />\n        {/* <Route path=\"/employees\" exact component={EmployeesPage} />\n        <Redirect to=\"/employees\" /> */}\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles/index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}